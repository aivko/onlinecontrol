<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/jdbc
       http://www.springframework.org/schema/jdbc/spring-jdbc.xsd">

    <mvc:annotation-driven conversion-service="conversionService"/>

    <context:component-scan
            base-package="com.vizaco.onlinecontrol.service"/>

    <!-- enables scanning for @Transactional annotations -->
    <tx:annotation-driven/>

    <!-- ========================= DATASOURCE DEFINITION ========================= -->

    <!-- Configurer that replaces ${...} placeholders with values from a properties file -->
    <!-- (in this case, JDBC-related settings for the dataSource definition below) -->
    <context:property-placeholder location="classpath:spring/data-access.properties" system-properties-mode="OVERRIDE"/>

    <!-- DataSource configuration for the Jetty jdbc connection -->
    <bean id="dataSource" class="org.hsqldb.jdbc.JDBCDataSource">
        <property name="url">
            <value>${jdbc.url}</value>
        </property>
        <property name="user">
            <value>${jdbc.username}</value>
        </property>
        <property name="password">
            <value>${jdbc.password}</value>
        </property>
    </bean>

    <!-- Database initializer. If any of the script fails, the initialization stops. -->
    <!-- As an alternative, for embedded databases see <jdbc:embedded-database/>. -->
    <jdbc:initialize-database data-source="dataSource">
        <jdbc:script location="${jdbc.initLocation}"/>
        <jdbc:script location="${jdbc.dataLocation}"/>
    </jdbc:initialize-database>

    <beans profile="jpa">
        <!--
            Loads JPA beans
            Will automatically be transactional due to @Transactional.
            EntityManager will be auto-injected due to @PersistenceContext.
            PersistenceExceptions will be auto-translated due to @Repository.
        -->
        <context:component-scan base-package="com.vizaco.onlinecontrol.dao.jpa"/>


        <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
              p:dataSource-ref="dataSource">
            <property name="jpaVendorAdapter">
                <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"
                      p:database="${jpa.database}" p:showSql="${jpa.showSql}"/>
                <!-- the 'database' parameter refers to the database dialect being used.
                	By default, Hibernate will use a 'HSQL' dialect because 'jpa.database' has been set to 'HSQL'
                	inside file spring/data-access.properties

                 -->
            </property>
        </bean>

        <!-- Transaction manager for a single JPA EntityManagerFactory (alternative to JTA) -->
        <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"
              p:entityManagerFactory-ref="entityManagerFactory"/>

        <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>

    </beans>

    <!-- SECURITY -->
    <beans>
        <bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.ShaPasswordEncoder"/>
    </beans>

    <!-- Validators -->
    <beans>
        <bean id="userValidator" class="com.vizaco.onlinecontrol.validators.UserValidator"/>
    </beans>

    <!-- Messages -->
    <beans>
        <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
            <property name="basename" value="classpath:messages"/>
            <property name="defaultEncoding" value="UTF-8"/>
        </bean>
        <bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
            <property name="defaultLocale" value="ru" />
        </bean>
    </beans>

    <!-- Converters -->
    <beans>
        <bean id="conversionService"
              class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
            <property name="converters">
                <set>
                    <bean class="com.vizaco.onlinecontrol.converters.StringToRole"/>
                    <bean class="com.vizaco.onlinecontrol.converters.StringToStudent"/>
                </set>
            </property>
            <!--<property name="formatters">-->
                <!--<set>-->
                    <!--<bean class="org.example.MyFormatter"/>-->
                    <!--<bean class="org.example.MyAnnotationFormatterFactory"/>-->
                <!--</set>-->
            <!--</property>-->
            <!--<property name="formatterRegistrars">-->
                <!--<set>-->
                    <!--<bean class="org.example.MyFormatterRegistrar"/>-->
                <!--</set>-->
            <!--</property>-->
        </bean>
    </beans>

</beans>